function strip(a,b=12){return+parseFloat(a.toPrecision(b))}function digitLength(a){const b=a.toString().split(/[eE]/),c=(b[0].split('.')[1]||'').length-+(b[1]||0);return 0<c?c:0}function float2Fixed(a){if(-1===a.toString().indexOf('e'))return+a.toString().replace('.','');const b=digitLength(a);return 0<b?a*Math.pow(10,b):a}function checkBoundary(a){(a>Number.MAX_SAFE_INTEGER||a<Number.MIN_SAFE_INTEGER)&&console.warn(`${a} is beyond boundary when transfer to integer, the results may not be accurate`)}function times(){const a=getArgs(arguments);if(!a)return a;if('object'!=typeof a)return a;const{num1:b,num2:c,args:d}=a,e=float2Fixed(b),f=float2Fixed(c),g=digitLength(b)+digitLength(c),h=e*f;checkBoundary(h);const i=h/Math.pow(10,g);return[].unshift.call(d,i),times.apply(null,d)}function plus(){const a=getArgs(arguments);if(!a)return a;if('object'!=typeof a)return a;const{num1:b,num2:c,args:d}=a,e=Math.pow(10,Math.max(digitLength(b),digitLength(c))),f=(times(b,e)+times(c,e))/e;return[].unshift.call(d,f),plus.apply(null,d)}function minus(){const a=getArgs(arguments);if(!a)return a;if('object'!=typeof a)return a;const{num1:b,num2:c,args:d}=a,e=Math.pow(10,Math.max(digitLength(b),digitLength(c))),f=(times(b,e)-times(c,e))/e;return[].unshift.call(d,f),minus.apply(null,d)}function divide(){const a=getArgs(arguments);if(!a)return a;if('object'!=typeof a)return a;const{num1:b,num2:c,args:d}=a,e=float2Fixed(b),f=float2Fixed(c);checkBoundary(e),checkBoundary(f);const g=times(e/f,Math.pow(10,digitLength(c)-digitLength(b)));return[].unshift.call(d,g),divide.apply(null,d)}function getArgs(a){if(a&&a.length){if(2>a.length)return a[0];var b=[].shift.call(a,0),c=[].shift.call(a,0);return{num1:b,num2:c,args:a}}}function round(a,b){const c=Math.pow(10,b);return divide(Math.round(times(a,c)),c)}export{strip,plus,minus,times,divide,round,digitLength,float2Fixed};export default{strip,plus,minus,times,divide,round,digitLength,float2Fixed};